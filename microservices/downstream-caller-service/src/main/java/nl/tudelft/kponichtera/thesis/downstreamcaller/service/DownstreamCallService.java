package nl.tudelft.kponichtera.thesis.downstreamcaller.service;

import io.opentelemetry.instrumentation.annotations.WithSpan;
import lombok.extern.slf4j.Slf4j;
import nl.tudelft.kponichtera.thesis.downstreamcaller.annotations.FirstService;
import nl.tudelft.kponichtera.thesis.downstreamcaller.annotations.SecondService;
import org.springframework.stereotype.Service;
import org.springframework.web.reactive.function.client.WebClient;

@Slf4j
@Service
public class DownstreamCallService {

    private final WebClient firstServiceClient;
    private final WebClient secondServiceClient;

    public DownstreamCallService(@FirstService WebClient firstServiceClient,
                                 @SecondService WebClient secondServiceClient) {
        this.firstServiceClient = firstServiceClient;
        this.secondServiceClient = secondServiceClient;
    }

    @WithSpan
    public void callFirstService() {
        log.info("Calling first service");
        firstServiceClient.get()
                .retrieve()
                .bodyToMono(Void.class)
                .block();
    }

    @WithSpan
    public void callSecondService() {
        log.info("Calling second service");
        secondServiceClient.get()
                .retrieve()
                .bodyToMono(Void.class)
                .block();

    }

}
