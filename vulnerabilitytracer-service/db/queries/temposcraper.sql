-- name: GetServicesForObserving :many
SELECT id, name
FROM service.latest_services;

-- name: InsertTrace :exec
WITH service AS (
    SELECT id
    FROM service.latest_services
    WHERE name = @service_name
)
INSERT INTO trace.traces (tempo_id, service_id, time)
SELECT @tempo_id, service.id, @time
FROM service
ON CONFLICT (tempo_id) DO NOTHING;

-- name: GetTracesToScrape :many
SELECT id, tempo_id, time
FROM trace.traces
WHERE scraped IS FALSE
  AND time > @fromTime
ORDER BY time
LIMIT @batch_size;

-- name: InsertEvent :exec
INSERT INTO trace.events (service_name, trace_id, callable_fasten_id, severity, mitigation_strategy, time,
                          vulnerability_external_id)
VALUES (@service_name, @trace_id, @callable_fasten_id, @severity, @mitigation_strategy, @time,
        @vulnerability_external_id);

-- name: SetTracesAsScraped :exec
UPDATE trace.traces
SET scraped = TRUE
WHERE id = ANY(@trace_ids::bigint[]);

-- name: CountUnscrapedTraces :one
SELECT COUNT(id)
FROM trace.traces
WHERE scraped IS FALSE
  AND time > @from_time;