// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: vulnerabilityupdaterprocessor.sql

package queries

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getDependenciesToUpdate = `-- name: GetDependenciesToUpdate :many
SELECT id, group_id, artifact_id, version
FROM java.dependencies
WHERE vulnerability_update_time < $1
`

type GetDependenciesToUpdateRow struct {
	ID         int64
	GroupID    string
	ArtifactID string
	Version    string
}

func (q *Queries) GetDependenciesToUpdate(ctx context.Context, vulnerabilityUpdateTime pgtype.Timestamptz) ([]GetDependenciesToUpdateRow, error) {
	rows, err := q.db.Query(ctx, getDependenciesToUpdate, vulnerabilityUpdateTime)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetDependenciesToUpdateRow
	for rows.Next() {
		var i GetDependenciesToUpdateRow
		if err := rows.Scan(
			&i.ID,
			&i.GroupID,
			&i.ArtifactID,
			&i.Version,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
