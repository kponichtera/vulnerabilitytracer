// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package queries

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type ServiceMitigationStrategyType string

const (
	ServiceMitigationStrategyTypeNONE  ServiceMitigationStrategyType = "NONE"
	ServiceMitigationStrategyTypeERROR ServiceMitigationStrategyType = "ERROR"
	ServiceMitigationStrategyTypeNOOP  ServiceMitigationStrategyType = "NOOP"
)

func (e *ServiceMitigationStrategyType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ServiceMitigationStrategyType(s)
	case string:
		*e = ServiceMitigationStrategyType(s)
	default:
		return fmt.Errorf("unsupported scan type for ServiceMitigationStrategyType: %T", src)
	}
	return nil
}

type NullServiceMitigationStrategyType struct {
	ServiceMitigationStrategyType ServiceMitigationStrategyType
	Valid                         bool // Valid is true if ServiceMitigationStrategyType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullServiceMitigationStrategyType) Scan(value interface{}) error {
	if value == nil {
		ns.ServiceMitigationStrategyType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ServiceMitigationStrategyType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullServiceMitigationStrategyType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ServiceMitigationStrategyType), nil
}

type VulnerabilitiesSeverity string

const (
	VulnerabilitiesSeverityUNDEFINED VulnerabilitiesSeverity = "UNDEFINED"
	VulnerabilitiesSeverityLOW       VulnerabilitiesSeverity = "LOW"
	VulnerabilitiesSeverityMODERATE  VulnerabilitiesSeverity = "MODERATE"
	VulnerabilitiesSeverityMEDIUM    VulnerabilitiesSeverity = "MEDIUM"
	VulnerabilitiesSeverityHIGH      VulnerabilitiesSeverity = "HIGH"
	VulnerabilitiesSeverityCRITICAL  VulnerabilitiesSeverity = "CRITICAL"
)

func (e *VulnerabilitiesSeverity) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = VulnerabilitiesSeverity(s)
	case string:
		*e = VulnerabilitiesSeverity(s)
	default:
		return fmt.Errorf("unsupported scan type for VulnerabilitiesSeverity: %T", src)
	}
	return nil
}

type NullVulnerabilitiesSeverity struct {
	VulnerabilitiesSeverity VulnerabilitiesSeverity
	Valid                   bool // Valid is true if VulnerabilitiesSeverity is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullVulnerabilitiesSeverity) Scan(value interface{}) error {
	if value == nil {
		ns.VulnerabilitiesSeverity, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.VulnerabilitiesSeverity.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullVulnerabilitiesSeverity) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.VulnerabilitiesSeverity), nil
}

type JavaCallable struct {
	ID           int64
	FastenID     string
	PackageName  string
	ClassName    string
	MethodName   string
	CreationTime pgtype.Timestamptz
}

type JavaCallablesVulnerability struct {
	CallableID      int64
	VulnerabilityID int64
}

type JavaDependenciesVulnerability struct {
	DependencyID    int64
	VulnerabilityID int64
}

type JavaDependency struct {
	ID                      int64
	GroupID                 string
	ArtifactID              string
	Version                 string
	CreationTime            pgtype.Timestamptz
	FastenProcessed         bool
	VulnerabilityUpdateTime pgtype.Timestamptz
}

type ServiceLatestService struct {
	ID               int64
	Name             string
	DependenciesHash string
	RegistrationTime pgtype.Timestamptz
}

type ServiceMitigationStrategy struct {
	ServiceID  int64
	CallableID int64
	Strategy   ServiceMitigationStrategyType
}

type ServiceService struct {
	ID               int64
	Name             string
	DependenciesHash string
	RegistrationTime pgtype.Timestamptz
}

type ServiceServiceDependency struct {
	ServiceID    int64
	DependencyID int64
}

type TraceEvent struct {
	ID                      int64
	CallableFastenID        string
	TraceID                 int64
	SpanID                  string
	ServiceID               int64
	Severity                VulnerabilitiesSeverity
	Time                    pgtype.Timestamptz
	MitigationStrategy      ServiceMitigationStrategyType
	VulnerabilityExternalID string
}

type TraceTrace struct {
	ID        int64
	TempoID   string
	ServiceID int64
	Scraped   bool
	Time      pgtype.Timestamptz
}

type TraceTraceGraphEdge struct {
	SourceTraceID int64
	SourceSpanID  string
	TargetTraceID int64
	TargetSpanID  string
}

type TraceTraceGraphNode struct {
	TraceID     int64
	SpanID      string
	ServiceName string
}

type VulnerabilitiesVulnerability struct {
	ID           int64
	ExternalID   string
	Severity     VulnerabilitiesSeverity
	CreationTime pgtype.Timestamptz
}
