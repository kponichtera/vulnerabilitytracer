// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: dependencyprocessor.sql

package queries

import (
	"context"
)

const getUnprocessedFastenDependencies = `-- name: GetUnprocessedFastenDependencies :many
SELECT id, group_id, artifact_id, version
FROM java.dependencies
WHERE fasten_processed IS FALSE
`

type GetUnprocessedFastenDependenciesRow struct {
	ID         int64
	GroupID    string
	ArtifactID string
	Version    string
}

func (q *Queries) GetUnprocessedFastenDependencies(ctx context.Context) ([]GetUnprocessedFastenDependenciesRow, error) {
	rows, err := q.db.Query(ctx, getUnprocessedFastenDependencies)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetUnprocessedFastenDependenciesRow
	for rows.Next() {
		var i GetUnprocessedFastenDependenciesRow
		if err := rows.Scan(
			&i.ID,
			&i.GroupID,
			&i.ArtifactID,
			&i.Version,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const setFastenDependenciesAsProcessed = `-- name: SetFastenDependenciesAsProcessed :exec
UPDATE java.dependencies
SET fasten_processed = TRUE
WHERE id = ANY($1::BIGINT[])
`

func (q *Queries) SetFastenDependenciesAsProcessed(ctx context.Context, dollar_1 []int64) error {
	_, err := q.db.Exec(ctx, setFastenDependenciesAsProcessed, dollar_1)
	return err
}
