###################
### Java schema ###
###################

schema "java" {}

table "dependencies" {
  schema = schema.java

  column "id" {
    type = bigserial
  }

  column "group_id" {
    type = varchar
  }

  column "artifact_id" {
    type = varchar
  }

  column "version" {
    type = varchar(255)
  }

  column "creation_time" {
    type    = timestamptz
    default = sql("now()")
  }

  column "fasten_processed" {
    type = boolean
  }

  column "vulnerability_update_time" {
    type = timestamptz
    null = true
  }

  primary_key {
    columns = [column.id]
  }

  index "depenedency_maven_coordinates" {
    columns = [
      column.group_id,
      column.artifact_id,
      column.version
    ]
    unique = true
  }

}

table "callables" {
  schema = schema.java

  column "id" {
    type = bigserial
  }

  column "fasten_id" {
    type = varchar
  }

  column "package_name" {
    type = varchar(255)
  }

  column "class_name" {
    type = varchar(255)
  }

  column "method_name" {
    type = varchar(255)
  }

  column "creation_time" {
    type    = timestamptz
    default = sql("now()")
  }

  primary_key {
    columns = [column.id]
  }

  index "fasten_id" {
    columns = [
      column.fasten_id,
    ]
    unique = true
  }

}

table "callables_vulnerabilities" {
  schema = schema.java

  column "callable_id" {
    type = bigint
  }

  column "vulnerability_id" {
    type = bigint
  }

  primary_key {
    columns = [
      column.callable_id,
      column.vulnerability_id
    ]
  }

  foreign_key "callables_fk" {
    columns     = [column.callable_id]
    ref_columns = [table.callables.column.id]
  }

  foreign_key "vulnerability_fk" {
    columns     = [column.vulnerability_id]
    ref_columns = [table.vulnerabilities.column.id]
  }

}

table "dependencies_vulnerabilities" {
  schema = schema.java

  column "dependency_id" {
    type = bigint
  }

  column "vulnerability_id" {
    type = bigint
  }

  primary_key {
    columns = [
      column.dependency_id,
      column.vulnerability_id
    ]
  }

  foreign_key "dependencies_fk" {
    columns     = [column.dependency_id]
    ref_columns = [table.dependencies.column.id]
  }

  foreign_key "vulnerability_fk" {
    columns     = [column.vulnerability_id]
    ref_columns = [table.vulnerabilities.column.id]
  }

}

##############################
### Vulnerabilities schema ###
##############################

schema "vulnerabilities" {}

# FIXME: Bug in Atlas, enums are not created in the first migration and require running apply two times.
#  https://github.com/ariga/atlas/issues/2156
#enum "severity" {
#  schema = schema.vulnerabilities
#  values = [
#    "UNDEFINED", "LOW", "MODERATE", "MEDIUM", "HIGH", "CRITICAL",
#  ]
#}

table "vulnerabilities" {
  schema = schema.vulnerabilities

  column "id" {
    type = bigserial
  }

  column "external_id" {
    type = varchar(255)
  }

  column "severity" {
    type = varchar(255)
  }

  column "creation_time" {
    type    = timestamptz
    default = sql("now()")
  }

  primary_key {
    columns = [column.id]
  }

  index "external_id" {
    columns = [
      column.external_id,
    ]
    unique = true
  }

  check "severity" {
    expr = "severity in ('UNDEFINED', 'LOW', 'MODERATE', 'MEDIUM', 'HIGH', 'CRITICAL')"
  }

}

######################
### Service schema ###
######################

schema "service" {}

# FIXME: Bug in Atlas, enums are not created in the first migration and require running apply two times.
#  https://github.com/ariga/atlas/issues/2156
#enum "mitigation_strategy" {
#  schema = schema.service
#  values = [
#    "ERROR", "NOOP",
#  ]
#}

table "services" {
  schema = schema.service

  column "id" {
    type = bigserial
  }

  column "name" {
    type = varchar(255)
  }

  column "dependencies_hash" {
    type = varchar(255)
  }

  column "registration_time" {
    type    = timestamptz
    default = sql("now()")
  }

  primary_key {
    columns = [column.id]
  }

  index "name" {
    columns = [
      column.name,
      column.dependencies_hash,
    ]
    unique = true
  }

}

table "service_dependencies" {
  schema = schema.service

  column "service_id" {
    type = bigint
  }

  column "dependency_id" {
    type = bigint
  }

  primary_key {
    columns = [
      column.service_id,
      column.dependency_id
    ]
  }

  foreign_key "services_fk" {
    columns     = [column.service_id]
    ref_columns = [table.services.column.id]
  }

  foreign_key "dependencies_fk" {
    columns     = [column.dependency_id]
    ref_columns = [table.dependencies.column.id]
  }

}

table "mitigation_strategies" {
  schema = schema.service

  column "service_id" {
    type = bigint
  }

  column "callable_id" {
    type = bigint
  }

  column "strategy" {
    type    = varchar(255)
  }

  primary_key {
    columns = [
      column.service_id,
      column.callable_id
    ]
  }

  foreign_key "services_fk" {
    columns     = [column.service_id]
    ref_columns = [table.services.column.id]
  }

  foreign_key "callables_fg" {
    columns     = [column.callable_id]
    ref_columns = [table.callables.column.id]
  }

  check "strategy" {
    expr = "strategy in ('ERROR', 'NOOP')"
  }

}

view "latest_services" {
  schema = schema.service

  column "id" {
    type = bigserial
  }

  column "name" {
    type = varchar(255)
  }

  column "dependencies_hash" {
    type = varchar(255)
  }

  column "registration_time" {
    type    = timestamptz
  }

  as = <<-SQL
    SELECT DISTINCT ON (name) id, name, dependencies_hash, registration_time
    FROM ${schema.service.name}.${table.services.name}
    ORDER BY name, registration_time DESC;
  SQL

  depends_on = [table.services]
}