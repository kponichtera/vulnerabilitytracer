openapi: 3.0.3
info:
  title: Vulnerability Tracer Service
  description: Vulnerability Tracer Service
  version: 0.1.0
servers:
  - url: 'http://localhost:11420'
  - url: 'http://dashboard.vulnerabilitytracer.localhost:8080'
paths:
  /liveness:
    get:
      summary: Check server liveness
      description: >
        Liveness endpoint is used by Kubernetes to determine 
        if the application after startup is still able to serve the requests
      responses:
        200:
          description: Application is running correctly
        500:
          description: Application has a problem that can lead to response errors
  /readiness:
    get:
      summary: Check server readiness
      description: >
        Readiness endpoint is used by Kubernetes to determine 
        if the application finished startup and can serve requests
      responses:
        200:
          description: Application can serve requests
  /api/getVulnerabilities:
    post:
      operationId: "getVulnerabilities"
      summary: Get list of vulnerabilities
      description: >
        Get the list of vulnerabilities for the use with the dashboard for the given time interval
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetVulnerabilitiesRequest'
            example:
              fromDateTime: '2017-07-21T17:32:28Z'
              toDateTime: '2017-07-21T17:42:28Z'
      responses:
        200:
          description: >
            List of basic information about vulnerabilities from the given time interval, to be used in the dashboard table
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVulnerabilitiesResponse'
        400:
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    # Enums
    VulnerabilitySeverity:
      type: string
      enum:
        - 'UNDEFINED'
        - 'LOW'
        - 'MODERATE'
        - 'MEDIUM'
        - 'HIGH'
        - 'CRITICAL'
    MitigationStrategy:
      type: string
      enum:
        - 'NONE'
        - 'ERROR'
        - 'NOOP'
    # Error handling
    ErrorResponse:
      title: Descriptive error response
      type: object
      required:
        - message
      properties:
        message:
          type: string
      example:
        message: "Error has occurred"
    # getVulnerabilities
    GetVulnerabilitiesRequest:
      type: object
      required:
        - fromDateTime
        - toDateTime
      properties:
        fromDateTime:
          type: string
          format: date-time
        toDateTime:
          type: string
          format: date-time
    GetVulnerabilitiesResponse:
      type: object
      required:
        - vulnerabilities
      properties:
        vulnerabilities:
          type: array
          items:
            $ref: '#/components/schemas/Vulnerability'
    Vulnerability:
      description: Brief information about vulnerability, to be used in the dashboard table
      type: object
      required:
        - externalId
        - severity
        - triggerCount
      properties:
        externalId:
          type: string
        severity:
          $ref: "#/components/schemas/VulnerabilitySeverity"
        triggerCount:
          type: number
