package service

import (
	"context"
	"fmt"

	"github.com/jackc/pgx/v5"

	"vulnerabilitytracer/db/generated/queries"
	"vulnerabilitytracer/pkg/coordinator/runtime"

	"github.com/sirupsen/logrus"
)

func CreateNewVulnerabilityNotification(ctx context.Context, runtimeCtx runtime.Context,
	serviceID int64,
	vulnerabilityExternalID string,
) error {
	err := runtimeCtx.DBQueries.CreateNewVulnerabilityNotification(ctx, queries.CreateNewVulnerabilityNotificationParams{
		Severity:                queries.NotificationsNotificationSeverityWARNING,
		ServiceID:               &serviceID,
		VulnerabilityExternalID: vulnerabilityExternalID,
	})
	if err != nil {
		return fmt.Errorf("failed to add notification to the database: %w", err)
	}

	logrus.
		WithField("serviceID", serviceID).
		WithField("vulnerabilityExternalID", vulnerabilityExternalID).
		Info("added new vulnerability notification for the service")

	return nil
}

func DismissServiceRestartNotifications(ctx context.Context, runtimeCtx runtime.Context, tx pgx.Tx, serviceID int64) error {
	err := runtimeCtx.DBQueries.WithTx(tx).DismissServiceRestartNotifications(ctx, &serviceID)
	if err != nil {
		return fmt.Errorf("failed to dismiss service notifications: %w", err)
	}

	logrus.
		WithField("serviceID", serviceID).
		Info("dismissed all notifications for the service")

	return nil
}
