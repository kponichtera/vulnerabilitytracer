package server

import (
	"context"
	"vulnerabilitytracer-service/pkg/fasten"

	"vulnerabilitytracer-service/api/generated/api"
)

type serverInterfaceImpl struct {
	RuntimeContext
}

func (s serverInterfaceImpl) PostApiRegister(ctx context.Context, request api.PostApiRegisterRequestObject) (api.PostApiRegisterResponseObject, error) {
	_, err := fasten.GetPackageWithoutBody(ctx, s.FastenAPIClient, "org.apache.logging.log4j", "log4j-core", "2.17.0")
	if err != nil {
		return nil, err
	}

	return api.PostApiRegister200JSONResponse{
		Callables: nil,
	}, nil
}

func (s serverInterfaceImpl) GetLiveness(ctx context.Context, request api.GetLivenessRequestObject) (api.GetLivenessResponseObject, error) {
	err := s.DBPool.Ping(ctx)
	if err != nil {
		return nil, err
	}

	return api.GetLiveness200Response{}, nil
}

func (s serverInterfaceImpl) GetReadiness(ctx context.Context, request api.GetReadinessRequestObject) (api.GetReadinessResponseObject, error) {
	return api.GetReadiness200Response{}, nil
}
