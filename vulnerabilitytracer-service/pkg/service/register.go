package service

import (
	"context"
	"errors"
	"fmt"
	"github.com/jackc/pgx/v5"
	"github.com/sirupsen/logrus"
	"vulnerabilitytracer-service/pkg/server/runtime"
)

func RegisterService(ctx context.Context, runtimeCtx runtime.Context, serviceName string) (int64, error) {
	serviceID, err := runtimeCtx.DBQueries.GetServiceByName(ctx, serviceName)
	if err == nil {
		logrus.WithField("serviceID", serviceID).Info("service already registered")
		return serviceID, nil
	} else if err != nil && !errors.Is(err, pgx.ErrNoRows) {
		return 0, fmt.Errorf("error when fetching service from database: %w", err)
	}

	// Service does not exist yet, register it
	serviceID, err = runtimeCtx.DBQueries.RegisterNewService(ctx, serviceName)
	if err != nil {
		return 0, fmt.Errorf("error when saving service to database: %w", err)
	}

	logrus.WithField("serviceID", serviceID).Info("registered new service")
	return serviceID, nil
}
