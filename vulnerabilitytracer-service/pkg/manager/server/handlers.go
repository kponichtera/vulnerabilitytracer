package server

import (
	"context"
	"vulnerabilitytracer/api/generated/managerapi"
	"vulnerabilitytracer/pkg/manager/runtime"
)

type serverInterfaceImpl struct {
	runtime.Context
}

func (s serverInterfaceImpl) GetVulnerabilities(ctx context.Context, request managerapi.GetVulnerabilitiesRequestObject) (managerapi.GetVulnerabilitiesResponseObject, error) {
	//TODO implement me
	panic("implement me")
}

func (s serverInterfaceImpl) GetLiveness(ctx context.Context, request managerapi.GetLivenessRequestObject) (managerapi.GetLivenessResponseObject, error) {
	err := s.DBPool.Ping(ctx)
	if err != nil {
		return nil, err
	}

	return managerapi.GetLiveness200Response{}, nil
}

func (s serverInterfaceImpl) GetReadiness(ctx context.Context, request managerapi.GetReadinessRequestObject) (managerapi.GetReadinessResponseObject, error) {
	return managerapi.GetReadiness200Response{}, nil
}
