package runtime

import (
	"github.com/jackc/pgx/v5/pgxpool"
	"github.com/sirupsen/logrus"
	"vulnerabilitytracer/db/generated/queries"
	"vulnerabilitytracer/pkg/db"
	"vulnerabilitytracer/pkg/utils"
)

type Context struct {
	DBPool    *pgxpool.Pool
	DBQueries *queries.Queries
}

func (c *Context) Close() {
	c.DBPool.Close()
	logrus.Info("runtime context shutdown complete")
}

func Build(databaseConfig db.Config) (*Context, error) {
	// Database
	databaseURL := utils.BuildDatabaseURL(databaseConfig)
	dbPool, err := db.NewConnectionPool(databaseURL)
	if err != nil {
		return nil, err
	}

	dbQueries := queries.New(dbPool)

	return &Context{
		DBPool:    dbPool,
		DBQueries: dbQueries,
	}, nil
}
