openapi: 3.0.3
info:
  title: Vulnerability Tracer Manager API
  description: Vulnerability Tracer Manager API
  version: 0.1.0
servers:
  - url: 'http://localhost:11420'
  - url: 'http://manager.vulnerabilitytracer.localhost:8080'
paths:
  /liveness:
    get:
      summary: Check server liveness
      description: >
        Liveness endpoint is used by Kubernetes to determine 
        if the application is alive
      responses:
        200:
          description: Application is running correctly
  /readiness:
    get:
      summary: Check server readiness
      description: >
        Readiness endpoint is used by Kubernetes to determine 
        if the application can serve requests
      responses:
        200:
          description: Application can serve requests
        500:
          description: Application has a problem that can lead to response errors
  /api/dashboard/getVulnerabilities:
    post:
      operationId: "getDashboardVulnerabilities"
      summary: Get list of vulnerabilities for the dashboard
      description: >
        Get the list of vulnerabilities for the use with the dashboard for the given time interval
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDashboardVulnerabilitiesRequestPayload'
            example:
              fromDateTime: '2017-07-21T17:32:28Z'
              toDateTime: '2017-07-21T17:42:28Z'
      responses:
        200:
          description: >
            List of basic information about vulnerabilities from the given time interval, to be used in the dashboard table
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboardVulnerabilitiesResponsePayload'
        400:
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponsePayload'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponsePayload'
  /api/details/getVulnerabilityServices:
    post:
      operationId: "getVulnerabilityServices"
      summary: Get list of services for the given vulnerability
      description: >
        Get the list of services for the given vulnerability 
        for the use with the dashboard in the given time interval
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetVulnerabilityServicesRequestPayload'
            example:
              vulnerabilityExternalId: '123'
              fromDateTime: '2017-07-21T17:32:28Z'
              toDateTime: '2017-07-21T17:42:28Z'
      responses:
        200:
          description: >
            List of basic information about services affected by the given vulnerability, to be used in the details table
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVulnerabilityServicesResponsePayload'
        400:
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponsePayload'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponsePayload'
  /api/mitigation/getVulnerabilityMitigations:
    post:
      operationId: "getServiceMitigations"
      summary: Get list of mitigations for the given vulnerability
      description: >
        Get the list of mitigations for each callable in each service, 
        affected by the given vulnerability in the given time interval.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceMitigationsRequestPayload'
            example:
              vulnerabilityExternalId: '123'
              fromDateTime: '2017-07-21T17:32:28Z'
              toDateTime: '2017-07-21T17:42:28Z'
      responses:
        200:
          description: >
            List of affected services, callables within the services, and their mitigations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceMitigationsResponsePayload'
        400:
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponsePayload'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponsePayload'

components:
  schemas:
    # Enums
    VulnerabilitySeverity:
      type: string
      enum:
        - 'UNDEFINED'
        - 'LOW'
        - 'MODERATE'
        - 'MEDIUM'
        - 'HIGH'
        - 'CRITICAL'
    MitigationStrategy:
      type: string
      enum:
        - 'NONE'
        - 'ERROR'
        - 'NOOP'
    # Error handling
    ErrorResponsePayload:
      title: Descriptive error response
      type: object
      required:
        - message
      properties:
        message:
          type: string
      example:
        message: "Error has occurred"
    # getDashboardVulnerabilities
    GetDashboardVulnerabilitiesRequestPayload:
      type: object
      required:
        - fromDateTime
        - toDateTime
      properties:
        fromDateTime:
          type: string
          format: date-time
        toDateTime:
          type: string
          format: date-time
    GetDashboardVulnerabilitiesResponsePayload:
      type: object
      required:
        - vulnerabilities
      properties:
        vulnerabilities:
          type: array
          items:
            $ref: '#/components/schemas/Vulnerability'
    Vulnerability:
      description: Brief information about vulnerability, to be used in the dashboard table
      type: object
      required:
        - externalId
        - severity
        - triggerCount
      properties:
        externalId:
          type: string
        severity:
          $ref: "#/components/schemas/VulnerabilitySeverity"
        triggerCount:
          type: integer
    # getVulnerabilityServices
    GetVulnerabilityServicesRequestPayload:
      type: object
      required:
        - vulnerabilityExternalId
        - fromDateTime
        - toDateTime
      properties:
        vulnerabilityExternalId:
          type: string
        fromDateTime:
          type: string
          format: date-time
        toDateTime:
          type: string
          format: date-time
    GetVulnerabilityServicesResponsePayload:
      type: object
      required:
        - services
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    Service:
      description: Brief information about service, affected by the vulnerability
      type: object
      required:
        - serviceName
        - dependencyGroupId
        - dependencyArtifactId
        - dependencyVersion
        - triggerCount
        - enabledMitigationsCount
      properties:
        serviceName:
          type: string
        dependencyGroupId:
          type: string
        dependencyArtifactId:
          type: string
        dependencyVersion:
          type: string
        triggerCount:
          type: integer
        enabledMitigationsCount:
          type: integer
        requiredOperations:
          type: array
          items:
            $ref: '#/components/schemas/RequiredOperation'
    RequiredOperation:
      type: object
      required:
        - id
        - description
      properties:
        id:
          type: integer
        description:
          type: string
    # getServiceMitigations
    GetServiceMitigationsRequestPayload:
      type: object
      required:
        - vulnerabilityExternalId
        - fromDateTime
        - toDateTime
      properties:
        vulnerabilityExternalId:
          type: string
        fromDateTime:
          type: string
          format: date-time
        toDateTime:
          type: string
          format: date-time
    GetServiceMitigationsResponsePayload:
      type: object
      required:
        - services
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceMitigation'
    ServiceMitigation:
      type: object
      required:
        - serviceId
        - serviceName
        - callables
      properties:
        serviceId:
          type: integer
        serviceName:
          type: string
        callables:
          type: array
          items:
            $ref: '#/components/schemas/CallableMitigation'
    CallableMitigation:
      type: object
      required:
        - callableId
        - dependencyGroupId
        - dependencyArtifactId
        - dependencyVersion
        - callablePackageName
        - callableClassName
        - callableMethodName
        - nonmitigatedTriggerCount
        - mitigatedTriggerCount
        - totalTriggerCount
        - mitigationStrategy
      properties:
        callableId:
          type: integer
        dependencyGroupId:
          type: string
        dependencyArtifactId:
          type: string
        dependencyVersion:
          type: string
        callablePackageName:
          type: string
        callableClassName:
          type: string
        callableMethodName:
          type: string
        nonmitigatedTriggerCount:
          type: integer
        mitigatedTriggerCount:
          type: integer
        totalTriggerCount:
          type: integer
        mitigationStrategy:
          $ref: "#/components/schemas/MitigationStrategy"

