openapi: 3.0.3
info:
  title: Vulnerability Tracer Coordinator API
  description: Vulnerability Tracer Coordinator API
  version: 0.1.0
servers:
  - url: 'http://localhost:10420'
  - url: 'http://coordinator.vulnerabilitytracer.localhost:8080'
paths:
  /liveness:
    get:
      operationId: "liveness"
      summary: Check server liveness
      description: >
        Liveness endpoint is used by Kubernetes to determine 
        if the application is alive
      responses:
        200:
          description: Application is running correctly
  /readiness:
    get:
      operationId: "readiness"
      summary: Check server readiness
      description: >
        Readiness endpoint is used by Kubernetes to determine 
        if the application can serve requests
      responses:
        200:
          description: Application can serve requests
        500:
          description: Application has a problem that can lead to response errors
  /api/register:
    post:
      operationId: "register"
      summary: Register service and get vulnerable callables for the microservice
      description: >
        Get vulnerable callables for the microservice and its dependencies,passed as Maven coordinates. 
        Also registers the service if it wasn't registered before, to track the vulnerabilities in its dependencies.
      requestBody:
        description: >
          Microservice's unique identifier and Maven coordinates of its dependencies.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestPayload'
            example:
              serviceName: 'my-microservice'
              dependencies:
                - groupId: 'dom4j'
                  artifactId: 'dom4j'
                  version: '1.6.1'
      responses:
        200:
          description: >
            List of service's vulnerable callables, together with their mitigation strategies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponsePayload'
        400:
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponsePayload'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponsePayload'
  /api/mock/addVulnerability:
    post:
      operationId: "addMockVulnerability"
      summary: Register a mock vulnerability in the database
      description: >
        Add a mock vulnerability to the dependency
      requestBody:
        description: >
          Vulnerability's metadata
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMockVulnerabilityRequestPayload'
            example:
              vulnerabilityExternalId: 'CVE-2024-12345'
              severity: 'CRITICAL'
              dependency:
                groupId: 'com.google.guava'
                artifactId: 'guava'
                version: '30.1.1-jre'
      responses:
        200:
          description: Vulnerability added successfully
        400:
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponsePayload'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponsePayload'
  /api/mock/addCallable:
    post:
      operationId: "addMockCallable"
      summary: Add a vulnerable callable to the dependency
      description: >
        Add a mock vulnerable callable to the dependency
      requestBody:
        description: >
          Vulnerable callable's metadata
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMockVulnerableCallableRequestPayload'
            example:
              packageName: 'nl.tudelft.kponichtera.thesis.generator.service'
              fastenId: 'mock12345'
              className: 'RandomGeneratorService'
              methodName: 'generateRandomInteger'
              vulnerabilityExternalIds:
                - 'CVE-2024-12345'
      responses:
        200:
          description: Callable added successfully
        400:
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponsePayload'
        500:
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponsePayload'

components:
  schemas:
    VulnerabilitySeverity:
      type: string
      enum:
        - 'UNDEFINED'
        - 'LOW'
        - 'MODERATE'
        - 'MEDIUM'
        - 'HIGH'
        - 'CRITICAL'
    MitigationStrategy:
      type: string
      enum:
        - 'NONE'
        - 'ERROR'
        - 'NOOP'
    MavenCoordinates:
      title: Maven coordinates
      type: object
      required:
        - groupId
        - artifactId
        - version
      properties:
        groupId:
          type: string
        artifactId:
          type: string
        version:
          type: string
    AddMockVulnerabilityRequestPayload:
      title: Add mock vulnerability request
      type: object
      required:
        - vulnerabilityExternalId
        - severity
        - dependency
      properties:
        vulnerabilityExternalId:
          type: string
        severity:
          $ref: "#/components/schemas/VulnerabilitySeverity"
        dependency:
          $ref: '#/components/schemas/MavenCoordinates'
    AddMockVulnerableCallableRequestPayload:
      title: Add mock vulnerable callable request
      type: object
      required:
        - fastenId
        - packageName
        - className
        - methodName
        - vulnerabilityExternalIds
      properties:
        packageName:
          type: string
        fastenId:
          type: string
        className:
          type: string
        methodName:
          type: string
        vulnerabilityExternalIds:
          type: array
          minItems: 1
          items:
            type: string
        serviceName:
          description: "Name of the service to register the mitigation strategy for. Omit to skip mitigation creation."
          type: string
        mitigationStrategy:
          $ref: "#/components/schemas/MitigationStrategy"
    JavaCallable:
      title: Vulnerable Java callable
      type: object
      required:
        - fastenId
        - packageName
        - className
        - methodName
        - mitigationStrategy
        - vulnerabilities
      properties:
        fastenId:
          type: string
        vulnerabilities:
          type: array
          items:
            $ref: '#/components/schemas/VulnerabilityMetadata'
        packageName:
          type: string
        className:
          type: string
        methodName:
          type: string
        mitigationStrategy:
          $ref: "#/components/schemas/MitigationStrategy"
    VulnerabilityMetadata:
      title: Vulnerability metadata
      type: object
      required:
        - severity
        - externalId
      properties:
        externalId:
          type: string
        severity:
          $ref: "#/components/schemas/VulnerabilitySeverity"
    RegisterRequestPayload:
      title: Register request
      type: object
      required:
        - serviceName
        - dependencies
      properties:
        serviceName:
          description: Name of the service to register
          type: string
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/MavenCoordinates'
    RegisterResponsePayload:
      title: Register response
      type: object
      properties:
        callables:
          type: array
          items:
            $ref: '#/components/schemas/JavaCallable'
    ErrorResponsePayload:
      title: Descriptive error response
      type: object
      required:
        - message
      properties:
        message:
          type: string
      example:
        message: "Error has occurred"