package nl.tudelft.kponichtera.thesis.vulnerabilitytracer.utils;

import lombok.experimental.UtilityClass;
import nl.tudelft.kponichtera.thesis.vulnerabilitytracer.report.VulnerableCallable;

import java.util.*;

@UtilityClass
public class ReportUtils {

    public static Map<String, List<VulnerableCallable>> extractCallablesForClasses(Collection<VulnerableCallable> callables) {
        var result = new HashMap<String, List<VulnerableCallable>>();
        for (var callable : callables) {
            var key = buildFullClassName(callable);
            result.putIfAbsent(key, new ArrayList<>());
            result.get(key).add(callable);
        }
        return result;
    }

    private static String buildFullClassName(VulnerableCallable callable) {
        return String.format("%s.%s", callable.getPackageName(), callable.getClassName());
    }


}
