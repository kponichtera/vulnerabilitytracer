import {Component, EventEmitter, Input, Output} from '@angular/core';
import {Notification, NotificationSeverity} from '../../../../../generated/vulnerabilitytracer-manager';
import {NotificationDismissEvent} from "./dashboard-notifications-dismiss-event";
import {MessagesModule} from "primeng/messages";
import {ButtonModule} from "primeng/button";

@Component({
  selector: 'app-dashboard-notifications',
  standalone: true,
  imports: [
    MessagesModule,
    ButtonModule
  ],
  templateUrl: './dashboard-notifications.component.html',
  styleUrl: './dashboard-notifications.component.scss'
})
export class DashboardNotificationsComponent {

  @Input()
  notifications: Notification[] = []

  @Output()
  onDismiss = new EventEmitter<NotificationDismissEvent>();

  protected dismiss(notificationId: number) {
    this.onDismiss.emit(new NotificationDismissEvent(notificationId));
  }

  protected toMessageSeverity(severity: NotificationSeverity): string {
    switch (severity) {
      case NotificationSeverity.Info:
        return "info"
      case NotificationSeverity.Warning:
        return "warn"
      default:
        return "info"
    }
  }

  protected toButtonSeverity(severity: NotificationSeverity): string {
    switch (severity) {
      case NotificationSeverity.Info:
        return ""
      case NotificationSeverity.Warning:
        return "warning"
      default:
        return ""
    }
  }

}
