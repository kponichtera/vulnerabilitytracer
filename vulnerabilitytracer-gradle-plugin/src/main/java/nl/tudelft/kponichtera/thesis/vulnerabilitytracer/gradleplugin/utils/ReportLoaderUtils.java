package nl.tudelft.kponichtera.thesis.vulnerabilitytracer.gradleplugin.utils;

import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.datatype.jdk8.Jdk8Module;
import lombok.experimental.UtilityClass;
import nl.tudelft.kponichtera.thesis.vulnerabilitytracer.gradleplugin.report.DependencyCheckReport;
import org.gradle.api.Project;

import java.io.File;
import java.io.IOException;
import java.util.Optional;

@UtilityClass
public class ReportLoaderUtils {

    public static Optional<DependencyCheckReport> loadReport(Project project) throws IOException {
        File reportFile = new File(project.getBuildDir() + "/reports/dependency-check-report.json");
        if (!reportFile.exists()) {
            return Optional.empty();
        }

        return Optional.of(loadReport(reportFile));
    }

    public static DependencyCheckReport loadReport(File reportFile) throws IOException {
        var mapper = createObjectMapper();
        return mapper.readValue(reportFile, DependencyCheckReport.class);
    }

    private static ObjectMapper createObjectMapper() {
        var objectMapper = new ObjectMapper();
        objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
        objectMapper.registerModule(new Jdk8Module());
        return objectMapper;
    }

}
