package nl.tudelft.kponichtera.thesis.vulnerabilitytracer.gradleplugin

import nl.tudelft.kponichtera.thesis.vulnerabilitytracer.gradleplugin.service.CacheService
import spock.lang.Specification
import spock.lang.TempDir

import java.nio.file.Path

class CacheServiceTests extends Specification {

    @TempDir
    File tempDirectory

    def "cache directory is created"() {
        given:
        def cacheRootDirectoryPath = tempDirectory.getPath()

        and:
        def cacheService = new CacheService(cacheRootDirectoryPath)

        when:
        cacheService.ensureCacheDir()

        and:
        def cacheDirectory = Path.of(cacheRootDirectoryPath, CacheService.CACHE_DIRECTORY)

        then:
        cacheDirectory.toFile().exists()
    }

    def "cache directory is pruned"() {
        given:
        def cacheRootDirectoryPath = tempDirectory.getPath()

        and:
        def cacheService = new CacheService(cacheRootDirectoryPath)
        cacheService.ensureCacheDir()

        when:
        cacheService.pruneCache()

        and:
        def cacheDirectory = Path.of(cacheRootDirectoryPath, CacheService.CACHE_DIRECTORY)

        then:
        !cacheDirectory.toFile().exists()
    }

}
